# Copyright (c) 1991, 1993
#     The Regents of the University of California.  All rights reserved.
# Copyright (c) 1997-2005
#     Herbert Xu <herbert@gondor.apana.org.au>.  All rights reserved.
# Copyright (c) 2018, 2021
#     Harald van Dijk <harald@gigawatt.nl>.  All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Kenneth Almquist.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

BEGIN {
	includes = includes "#include \"shell.h\"\n"
	includes = includes "#include \"mystring.h\"\n"
	includes = includes "#include \"init.h\"\n"
}

/^INCLUDE / {
	sub("INCLUDE", "#include")
	if (!index(includes, $0)) {
		includes = includes $0 "\n"
	}
}

/^#define / {
	if (!index($2, "(")) {
		defs = defs "#undef  " $2 "\n"
		defs = defs $0 "\n"
	}
}

/^MKINIT$/, /^$/ {
	sub("MKINIT", "")
	decls = decls $0 "\n"
}

/^MKINIT / {
	sub("MKINIT", "extern")
	sub(" *=[^;]*", "")
	decls = decls $0 "\n"
}

/^INIT \{$/, /^}$/ {
	sub("^INIT \\{$", "/* from " FILENAME " */\n\t{")
	if (/^[^#]/) $0 = "\t" $0
	init = init $0 "\n"
}

/^RESET \{$/, /^}$/ {
	sub("^RESET \\{$", "/* from " FILENAME " */\n\t{")
	if (/^[^#]/) $0 = "\t" $0
	reset = reset $0 "\n"
}

END {
	print "/*\n * This file was generated by the mkinit script.\n */\n"
	print "#include \"config.h\"\n"
	print includes
	print defs
	print decls
	print "/*"
	print " * Initialization code."
	print " */"
	print "void"
	print "init(void)"
	print "{"
	print init "}"
	print ""
	print "/*"
	print " * This routine is called when an error or an interrupt occurs in an"
	print " * interactive shell and control is returned to the main command loop,"
	print " * or when a subshell is started."
	print " */"
	print "void"
	print "reset(int sub)"
	print "{"
	print reset "}"
}
